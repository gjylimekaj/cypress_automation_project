{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-07T19:53:09.600Z",
    "end": "2024-10-07T19:53:23.859Z",
    "duration": 14259,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d3ee018f-31f0-4357-8404-cfebd6c32216",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\Test1.js",
      "file": "cypress\\integration\\examples\\Test1.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2a5051e8-df70-4e6b-a8cf-dacba8bfb1a0",
          "title": "My first test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My first test case",
              "fullTitle": "My first test suite My first test case",
              "timedOut": null,
              "duration": 9726,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('url') + \"/seleniumPractise/#/\");\ncy.get('.search-keyword').type('ca');\ncy.wait(2000);\ncy.get('.product:visible').should('have.length', 4);\ncy.get('.products').as('productLocator');\ncy.get('@productLocator').find('.product').should('have.length', 4);\ncy.get('@productLocator').find('.product').eq(2).contains('ADD TO CART').click().then(function () {\n  console.log('hello wolrd!!!!');\n});\n//$el: The current element being processed in the collection. This is a wrapped jQuery object, so you can use jQuery methods on it.\n//index: The index of the current element in the collection, starting from 0.\n//$list: The entire list of elements as a jQuery object array.\ncy.get('@productLocator').find('.product').each(($el, index, $list) => {\n  const textVeg = $el.find('h4.product-name').text();\n  if (textVeg.includes('Cashews')) {\n    cy.wrap($el).find('button').click();\n  }\n});\n//assert if logo text is correctly displayed\ncy.get('.brand').should('have.text', 'GREENKART');\n//this is to print in logs\ncy.get('.brand').then(function (logoelement) {\n  cy.log(logoelement.text());\n});\n//cy.log(logo.text())",
              "err": {},
              "uuid": "f0d825bd-dbea-4249-88d5-3c7ea9f13607",
              "parentUUID": "2a5051e8-df70-4e6b-a8cf-dacba8bfb1a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f0d825bd-dbea-4249-88d5-3c7ea9f13607"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9726,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}